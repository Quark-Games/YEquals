name: Build and Release

concurrency: build-and-release-${{ github.ref }}

on:
  push:
    branches: [master, experimental, development]
  
jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest, macos-10.15, windows-2022, ubuntu-20.04, ubuntu-18.04, macos-11, windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Build on unix
      if: !contains( matrix.os, windows )
      run: |
        pyinstaller --onefile ./main.py
        mv dist/main ./main
        chmod +x main
        zip -r ${{ matrix.os }}.zip main assets
    - name: Build on windows
      if: contains( matrix.os, windows )
      run: |
        pyinstaller --onefile ./main.py
        mv dist/main.exe ./main.exe
        Compress-Archive main.exe windows-latest.zip
        Compress-Archive assets -Update windows-latest.zip
    - name: Upload build
      uses: actions/upload-artifact@v2
      with:
        name: "release"
        path: "${{ matrix.os }}.zip"
        retention-days: 1
  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Download builds
      uses: actions/download-artifact@v2
    - name: Release stable builds
      if: github.ref == 'refs/heads/master'
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest-stable"
        title: "Latest Stable Release"
        prerelease: false
        files: |
          release/*.zip
    - name: Release experimental builds
      if: github.ref == 'refs/heads/experimental'
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest-experimental"
        title: "Latest Experimental Release"
        prerelease: true
        files: |
          release/*.zip
    - name: Release development builds
      if: github.ref == 'refs/heads/development'
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest-development"
        title: "Latest Development Release"
        prerelease: true
        files: |
          release/*.zip

