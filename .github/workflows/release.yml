name: Build and Release

concurrency: build-and-release-${{ github.ref }}

on:
  push:
    branches: [master, experimental, development]
    path:
      - '**/*.py'
      - 'assets/**'
  
jobs:
  build:
    strategy:
      matrix:
        os: [
          macos-10.15,
          macos-11,
          macos-latest,
          ubuntu-18.04,
          ubuntu-20.04,
          ubuntu-latest,
          windows-2019,
          windows-2022,
          windows-latest,
        ]
        py: [
          "3.10",
          "3.9",
          "3.8",
          "3.7",
        ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.py }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Build on unix
      if: ${{ ! contains( matrix.os, 'windows' ) }}
      run: |
        pyinstaller --onefile ./main.py
        mv dist/main ./main
        chmod +x main
        zip -r ${{ matrix.os }}-${{ matrix.py }}.zip main assets
    - name: Build on windows
      if: ${{ contains( matrix.os, 'windows' ) }}
      run: |
        pyinstaller --onefile ./main.py
        mv dist/main.exe ./main.exe
        Compress-Archive main.exe ${{ matrix.os }}-${{ matrix.py }}.zip
        Compress-Archive assets -Update ${{ matrix.os }}-${{ matrix.py }}.zip
    - name: Upload build
      uses: actions/upload-artifact@v2
      with:
        name: "release"
        path: "${{ matrix.os }}-${{ matrix.py }}.zip"
        retention-days: 1
  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Download builds
      uses: actions/download-artifact@v2
    - name: Release builds
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest-${{ github.head_ref || github.ref_name }}"
        title: "latest ${{ github.head_ref || github.ref_name }} release"
        prerelease: ${{ ! contains( github.ref, 'master' ) }}
        files: |
          release/*.zip
